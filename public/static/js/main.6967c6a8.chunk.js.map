{"version":3,"sources":["assets/bgImg.jpg","assets/bgImgMobile.jpg","config/local.js","components/Nav.js","components/Signup.js","components/Login.js","components/Home.js","components/ListHeader.js","components/ProfileNav.js","components/Task.js","components/Profile.js","App.js","index.js","assets/logo.png","config/session.js"],"names":["module","exports","local","window","localStorage","getItem","key","setItem","value","getRemember","Nav","props","className","style","width","href","src","logo","alt","type","data-toggle","data-target","id","onClick","changeSignup","Signup","useState","name","setName","email","setEmail","password1","setPassword1","password2","setPassword2","passwordsMatch","updateMatch","emailTaken","updateEmailTaken","remember","setRemember","salt","bcrypt","genSaltSync","handleChange","event","target","createUser","a","user","password","hashSync","lists","options","method","headers","body","JSON","stringify","fetch","process","response","status","get","handleSuccessfulAuth","placeholder","onChange","required","paddingBottom","checked","preventDefault","Login","setPassword","invalidLogin","setInvalidLogin","isAuthorized","potentialUser","Home","signup","setSignup","toggleSignup","bool","token","history","push","innerWidth","bgImg","bgImgMobile","ListHeader","displayList","index","ProfileNav","modal1","setModal1","modal2","setModal2","description","setDescription","taskName","setTaskName","Date","finishDate","setFinishDate","noFinishDate","setNoFinishDate","toggle1","toggle2","Modal","isOpen","toggle","ModalHeader","ModalBody","marginBottom","minLength","ModalFooter","Button","color","obj","addList","date","marginTop","newTask","toString","addTask","Task","modal","setModal","task","removeTask","completed","document","title","borderBottom","undefined","substr","fontSize","updateTask","Profile","profile","setProfile","tasks","listDisplayed","setListDisplayed","indexDisplayed","setIndexDisplayed","useEffect","then","json","data","length","newList","Object","assign","alert","splice","removeList","padding","map","list","float","marginRight","ButtonGroup","fontWeight","fontStyle","App","exact","path","render","ReactDOM","StrictMode","getElementById","session","sessionStorage"],"mappings":"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","file":"static/js/main.6967c6a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgImg.7cfaf174.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bgImgMobile.7a95487b.jpg\";","const local = window.localStorage;\n\nconst getItem = (key) => {\n    return local.getItem(key);\n}\nconst setItem = (key, value) => {\n    local.setItem(key, value);\n}\nconst getRemember = () => {\n    return local.getItem('remember') === 'true' ? true : false;\n}\n\nmodule.exports = {\n    getItem,\n    setItem,\n    getRemember\n}\n\n// use local storage to keep their email and password ready BUT ENCRYPTED\n\n// use session storage to see if they logged in before accessing data","import React from 'react';\nimport logo from '../assets/logo.png';\n// watch out for some errors from Heroky when using hrefs\n\nconst Nav = (props) => {\n    return (\n        <nav className='navbar navbar-expand-md bg-transparent navbar-dark bg-dark' style={{width: \"100%\"}}>\n        <div className='container-fluid'>\n            <a className='navbar-brand' href='/'><img src={logo} alt='' width='75px'/></a>\n            <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarResponsive'>\n                <span className='navbar-toggler-icon'></span>\n            </button>\n        </div>\n        <div className='collapse navbar-collapse' id='navbarResponsive' >\n                <ul className='navbar-nav ml-auto'>\n                    <li className='nav-item'>\n                        <a className='nav-link' href='/'>Home</a>\n                    </li>\n                    <li className='nav-item'>\n                        <a className='nav-link disabled' href='/'>About</a>\n                    </li>\n                    <li className='nav-item'>\n                        <a className='nav-link disabled' href='/'>Pricing</a>\n                    </li>\n                    <li className='nav-item'>\n                        <a className='nav-link' href='#' onClick={() => props.changeSignup(true)}>Sign up</a>\n                    </li>\n                    <li className='nav-item'>\n                        <a className='nav-link' href='#' onClick={() => props.changeSignup(false)}>Log in</a>\n                    </li>\n                </ul>\n        </div>\n    </nav>\n    )\n}\n\nexport default Nav;","import React, { useState } from 'react';\nimport bcrypt from 'bcryptjs';\nimport { setItem } from '../config/local';\n\nconst Signup = (props) => {\n    const [name, setName] = useState(() => '');\n    const [email, setEmail] = useState(() => '');\n    const [password1, setPassword1] = useState(() => '');\n    const [password2, setPassword2] = useState(() => '');\n    const [passwordsMatch, updateMatch] = useState(() => true);\n    const [emailTaken, updateEmailTaken] = useState(() => false);\n    const [remember, setRemember] = useState(() => true);\n\n    const salt = bcrypt.genSaltSync(10);\n\n    const handleChange = (event) => {\n        switch (event.target.name) {\n            case 'remember':\n                setRemember(!remember);\n                break;\n            case 'name':\n                setName(event.target.value)\n                break;\n            case 'email':\n                setEmail(event.target.value);\n                break;\n            case 'password1':\n                setPassword1(event.target.value);\n                break;\n            default:\n                setPassword2(event.target.value);\n                break;\n        }\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault();\n        if (password1 !== password2) {\n            updateMatch(false);\n            return;\n        } else {\n            updateMatch(true);\n            createUser();\n        }\n    }\n\n    const createUser = async () => {\n        const user = {\n            name: name,\n            email: email,\n            password: bcrypt.hashSync(password1, salt),\n            lists: []\n        }\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        }\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/users/signup`, options);\n        if (response.status === 401) {\n            updateEmailTaken(true);\n        } else {\n            // redirect to user-specific home page\n            updateEmailTaken(false);\n            if (remember) {\n                setItem('token', response.headers.get('auth'));\n            }\n            // put the token in session storage\n            props.handleSuccessfulAuth(response.headers.get('auth'));\n            // console.log(response.headers.get('auth'));\n        }\n    }\n\n    return (\n        <form className='signup-login'>\n        <h2>Sign up</h2>\n            <div className='form-group'>\n                <input type='text' name='name' className='form-control' placeholder='Enter name' value={name} onChange={handleChange} required/>\n            </div>\n            <div className=\"form-group\">\n                <input type='email' name='email' className='form-control' placeholder='Enter email' value={email} onChange={handleChange} required/>\n                <small className='form-text text-muted'>I'll never share your email with anyone else.</small>\n                { emailTaken ? <small className=\"bright-red\">Email already in use</small> : <></> }\n            </div>\n            <div className='form-group'>\n                <input type='password' name='password1' className='form-control' placeholder='Enter password' value={password1} onChange={handleChange} required/>\n            </div>\n            <div className='form-group'>\n                <input type='password' name='password2' className='form-control' placeholder='Confirm password' value={password2} onChange={handleChange} required/>\n                { passwordsMatch ? <></> : <small className=\"bright-red\">Passwords do not match</small>}\n            </div>\n            <div className='form-check' style={{paddingBottom: '12px'}}>\n                <input type='checkbox' name=\"remember\" className=\"form-check-input\" checked={remember} onChange={handleChange}/> {' Keep me signed in'}\n            </div>\n            <button className='btn btn-primary' onClick={handleClick}>Submit</button>\n            <p onClick={() => props.changeSignup(false)} className='has-account'>Already have an account?</p>\n        </form>\n    )\n}\n\nexport default Signup;","import React, { useState } from 'react';\nimport { getItem, setItem, getRemember } from '../config/local';\n\nconst Login = (props) => {\n\n    const [email, setEmail] = useState(getItem('email'));\n    const [password, setPassword] = useState(() => '');\n    const [remember, setRemember] = useState(getRemember());\n    const [invalidLogin, setInvalidLogin] = useState(() => false);\n\n    const isAuthorized = async () => {\n        const potentialUser = {\n            email: email,\n            password: password\n        }\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(potentialUser)\n        }\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/users/login`, options);\n        if (response.status === 401) {\n            setInvalidLogin(true);\n        } else {\n            setInvalidLogin(false);\n            if (remember) {\n                setItem('auth', response.headers.get('auth'));\n            }\n            props.handleSuccessfulAuth(response.headers.get('auth'));\n        }\n    }\n\n    return (\n        <form className='signup-login'>\n        <h2>Log in</h2>\n            <div className=\"form-group\">\n                <input type='email' name='email' className='form-control' placeholder='Enter email' value={email} onChange={({target}) => {\n                    setEmail(target.value);\n                }} required/>\n            </div>\n            <div className='form-group'>\n                <input type='password' name='password1' className='form-control' placeholder='Enter password' value={password} onChange={({target}) => {\n                    setPassword(target.value);\n                }} required/>\n                { invalidLogin ? <small className=\"bright-red\">Username and password incorrect.</small> : <></> }\n            </div>\n            <div className='form-check' style={{paddingBottom: '12px'}}>\n                <input type='checkbox' className=\"form-check-input\" checked={remember} onChange={({target}) => {\n                    setRemember(!remember);\n                }} /> {' Keep me signed in'}\n            </div>\n            <button className='btn btn-primary' onClick={(event) => {\n                // send data and verify login credentials\n                event.preventDefault();\n                isAuthorized();\n                if (remember) {\n                    setItem('email', email);\n                    setItem('remember', true);\n                } else {\n                    setItem('email', '');\n                    setItem('remember', false);\n                    setItem('auth', '');\n                }\n            }}>Submit</button>\n            <p onClick={() => props.changeSignup(true)} className='has-account'>Create an account</p>\n        </form>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport Nav from './Nav';\n// import Footer from './Footer';\nimport bgImg from '../assets/bgImg.jpg';\nimport bgImgMobile from '../assets/bgImgMobile.jpg';\nimport Signup from './Signup';\nimport Login from './Login';\nimport { setItem } from '../config/session';\n\nconst Home = (props) => {\n    const [signup, setSignup] = useState(() => true);\n\n    const toggleSignup = (bool) => {\n        setSignup(bool);\n    }\n\n    const handleSuccessfulAuth = (token) => {\n        setItem('auth', token);\n        props.history.push('/profile');\n    }\n\n    if (props.token) {\n        handleSuccessfulAuth(props.token);\n    }\n\n    return (\n        <>\n        <Nav changeSignup={toggleSignup}/>\n        {window.innerWidth > 576 ? <img src={bgImg} className='bgImg' alt=''/> : <img src={bgImgMobile} className='bgImg' alt=''/>}\n        <div className='bgFilter'></div>\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='offset-md-7 col-md-4 col-xs-10 align-items-center align'>\n                { signup ? <Signup changeSignup={toggleSignup} handleSuccessfulAuth={handleSuccessfulAuth} /> \n                : <Login changeSignup={toggleSignup} handleSuccessfulAuth={handleSuccessfulAuth}/>}\n                </div>\n            </div>\n        </div>\n        {/* <Footer /> */}\n        </>\n    )\n}\n\nexport default Home;","import React from 'react';\n\nconst ListHeader = (props) => {\n\n    return (\n        <>\n        <li className=\"list-group-item sideItem\" onClick={() => {props.displayList(props.index)}}>\n            {props.name}\n        </li>\n        \n        </>\n    )\n}\n\nexport default ListHeader;","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport logo from '../assets/logo.png';\nimport Calendar from 'react-calendar';\n\n\nconst ProfileNav = (props) => {\n    \n    const [modal1, setModal1] = useState(false);\n    const [modal2, setModal2] = useState(false);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [taskName, setTaskName] = useState('');\n    const [finishDate, setFinishDate] = useState(new Date());\n    const [noFinishDate, setNoFinishDate] = useState(false);\n    \n    const toggle1 = () => setModal1(!modal1);\n    const toggle2 = () => setModal2(!modal2);\n\n    const handleList = () => {\n        const obj = {name, description};\n        obj.tasks = [];\n        props.addList(obj);\n        toggle1();\n        setName('');\n        setDescription('');\n    }\n\n    const handleChange = (date) => {\n        setFinishDate(date);\n    }\n\n    const handleTask = () => {\n        const newTask = {name: taskName}\n        if (!noFinishDate) {\n            newTask.finishDate = finishDate.toString();\n        }\n        props.addTask(newTask);\n        toggle2();\n        setTaskName('');\n        setFinishDate(new Date());\n    }\n\n    return (\n        <nav className='navbar navbar-expand-md navbar-dark bg-dark sticky-top'>\n        <div className='container-fluid'>\n            <div className=\"nav nav-justified col-1\">\n                {/* <i className=\"fas fa-bars\"></i>  THINK ABOUT PUTTING A TOGGLE BUTTON FOR THE SIDEBAR*/}\n            </div>\n            <div className=\"nav nav-justified col-6 offset-2\">\n                <img src={logo} className='navbar-brand mx-auto' alt='' width='75px'/>\n            </div>\n            <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarResponsive'>\n                <span className='navbar-toggler-icon'></span>\n            </button>\n            <div className='collapse navbar-collapse' id='navbarResponsive'>\n                <ul className='navbar-nav ml-auto'>\n                    <li className='nav-item' onClick={toggle1}>\n                        <div>\n                            <Modal isOpen={modal1} toggle={toggle1}>\n                                <ModalHeader toggle={toggle1}>Add a new list</ModalHeader>\n                                <ModalBody>\n                                    <form>\n                                        <input type='text' value={name} placeholder='New list name' style={{width: '100%', marginBottom: '10px'}} onChange={({target}) => setName(target.value)} minLength=\"1\" required/>\n                                        <input type='text' value={description} placeholder='List description' style={{width: '100%'}} onChange={({target}) => setDescription(target.value)}/>\n                                    </form>\n                                </ModalBody>\n                                <ModalFooter>\n                                <Button color=\"primary\" onClick={handleList}>Create List</Button>{' '}\n                                <Button color=\"secondary\" onClick={toggle1}>Cancel</Button>\n                                </ModalFooter>\n                            </Modal>\n                        </div>\n                        <p className='nav-link'>Add List</p>\n                    </li>\n                    <li className='nav-item' onClick={toggle2}>\n                        <div>\n                            <Modal isOpen={modal2} toggle={toggle2}>\n                                <ModalHeader toggle={toggle2}>Add a new task</ModalHeader>\n                                <ModalBody>\n                                    <form>\n                                        <input type='text' value={taskName} placeholder='New task name' style={{width: '100%', marginBottom: '10px'}} onChange={({target}) => setTaskName(target.value)} minLength=\"1\"/>\n                                        {noFinishDate ? '' : <Calendar value={finishDate} onChange={handleChange}/>}\n                                        <input type='checkbox' checked={noFinishDate} style={{marginTop: \"10px\"}} onChange={() => setNoFinishDate(!noFinishDate)}/> {' No finish date'}\n                                    </form>\n                                </ModalBody>\n                                <ModalFooter>\n                                <Button color=\"primary\" onClick={handleTask}>Create Task</Button>{' '}\n                                <Button color=\"secondary\" onClick={toggle2}>Cancel</Button>\n                                </ModalFooter>\n                            </Modal>\n                        </div>\n                        <p className='nav-link'>Add Task</p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        </nav>\n    )\n}\n\nexport default ProfileNav;","import React, {useState} from 'react';\nimport { Modal, ModalHeader, ModalBody, Button, ModalFooter } from 'reactstrap';\nimport Calendar from 'react-calendar';\n\nconst Task = (props) => {\n      \n    const [modal, setModal] = useState(false);\n    const [name, setName] = useState(props.task.name);\n    const [finishDate, setFinishDate] = useState(new Date());\n    const [noFinishDate, setNoFinishDate] = useState(false);\n    \n    const toggle = () => {\n        if (modal === true) {\n            setName(props.task.name);\n            setFinishDate(new Date());\n        }\n        setModal(!modal)\n    };\n\n    const handleChange = (date) => {\n        setFinishDate(date);\n    }\n\n    const removeTask = (completed) => {\n        if (completed) {\n            document.title = 'Congrats!';\n        } else {\n            document.title = 'List';\n        }\n        props.removeTask(props.index);\n        toggle();\n    }\n\n    const handleUpdate = () => {\n        const obj = {name};\n        if (!noFinishDate) {\n            obj.finishDate = finishDate;\n        }\n        props.updateTask(obj, props.index);\n    }\n\n    return (\n        <li className='row' style={{marginTop: \"10px\", borderBottom: \"1px dashed #343b40\"}}>\n            <div className='col-4'>\n                <div>\n                {props.task.name}\n                </div>\n            </div>\n            <div className='col-4'>\n                {props.task.finishDate === undefined ? <i>No finish date</i> : props.task.finishDate.toString().substr(0, 15)}\n            </div>\n            <div className='col-4 text-center'>\n                <i className='fa fa-gear' onClick={toggle} style={{fontSize: '20px'}}></i>\n                <div>\n                    <Modal isOpen={modal} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>Current Task</ModalHeader>\n                        <ModalBody>\n                            <form>\n                                <input type='text' placeholder='New list name' style={{width: '100%', marginBottom: '10px'}} value={name} onChange={({target}) => setName(target.value)}/>\n                                {noFinishDate ? '' : <Calendar value={finishDate} onChange={handleChange}/>}\n                                        <input type='checkbox' checked={noFinishDate} style={{marginTop: \"10px\"}} onChange={() => setNoFinishDate(!noFinishDate)}/> {' No finish date'}\n                            </form>\n                        </ModalBody>\n                        <ModalFooter>\n                        <Button color=\"success\" onClick={() => removeTask(true)}>Completed</Button>{' '}\n                        <Button color=\"secondary\" onClick={handleUpdate}>Update</Button>\n                        <Button color=\"danger\" onClick={() => removeTask(false)} >Delete</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Task;","import React, { useState, useEffect } from 'react';\nimport { getItem } from '../config/session';\nimport ListHeader from './ListHeader';\nimport ProfileNav from './ProfileNav';\nimport Task from './Task';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nconst Profile = (props) => {\n    const token = getItem('auth');\n    if (!token) {\n        props.history.push('/'); // props.history.push may not work with Heroku. May need to use redirect\n    }\n\n    const [profile, setProfile] = useState({lists: []});\n    const [listDisplayed, setListDisplayed] = useState({name: '', description: '', tasks: []});\n    const [indexDisplayed, setIndexDisplayed] = useState(0);\n\n    useEffect(() => {\n        const options = {\n            headers: {\n                'auth': token\n            }\n        }\n        fetch(`${process.env.REACT_APP_API_URL}/lists`, options)\n            .then(response => response.json())\n            .then(data => {\n                setProfile(data);\n                if (data.lists.length > 0) {\n                    setListDisplayed(data.lists[indexDisplayed]);\n                }\n            });\n    }, [token, setProfile, indexDisplayed]);\n\n    const displayList = (index) => {\n        setListDisplayed(profile.lists[index]);\n        setIndexDisplayed(index);\n    }\n\n    const getListTitles = () => {\n        return profile.lists.map((list, index) => <ListHeader key={index} displayList={displayList} index={index} name={list.name} />);\n    }\n\n    const addList = async (newList) => {\n        // get the data then use setProfile to add the data to the list\n        if (profile.lists.length === 0) {\n            setListDisplayed(newList);\n        }\n        const obj = Object.assign({}, profile);\n        obj.lists.push(newList);\n        const id = profile.id;\n        delete obj.id;\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'id': id\n            },\n            body: JSON.stringify({lists: obj.lists})\n        }\n        await fetch(`${process.env.REACT_APP_API_URL}/lists`, options);\n        obj.id = id;\n        setProfile(obj);\n    }\n\n    const listTasks = () => {\n        return listDisplayed.tasks.map((task, index) => <Task task={task} index={index} key={index} removeTask={removeTask} updateTask={updateTask}/>)\n    }\n\n    const addTask = async (task) => {\n        if (listDisplayed.name === '') {\n            window.alert('You must create a list before adding a task.')\n            return;\n        }\n        const obj = Object.assign({}, profile);\n        const id = obj.id;\n        delete obj.id;\n        obj.lists[indexDisplayed].tasks.push(task);\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'id': profile.id\n            },\n            body: JSON.stringify(obj)\n        }\n        await fetch(`${process.env.REACT_APP_API_URL}/lists`, options);\n        obj.id = id;\n        setProfile(obj);\n    }\n\n    const removeTask = async (index) => {\n        const obj = Object.assign({}, profile);\n        const id = obj.id;\n        delete obj.id;\n        obj.lists[indexDisplayed].tasks.splice(index, 1);\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'id': id\n            },\n            body: JSON.stringify(obj)\n        }\n        await fetch(`${process.env.REACT_APP_API_URL}/lists`, options);\n        obj.id = id;\n        setProfile(obj);\n    }\n\n    const removeList = async (bool) => {\n        if (bool) {\n            document.title = \"Way to go!\"\n        } else {\n            document.title = \"Keep trying!\"\n        }\n        const obj = Object.assign({}, profile);\n        const id = obj.id;\n        delete obj.id;\n        obj.lists.splice(indexDisplayed, 1);\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'id': id\n            },\n            body: JSON.stringify(obj)\n        }\n        await fetch(`${process.env.REACT_APP_API_URL}/lists`, options);\n        obj.id = id;\n        setProfile(obj);\n        if (obj.lists.length !== 0) {\n            setIndexDisplayed(0);\n            setListDisplayed(profile.lists[0])\n        } else {\n            setIndexDisplayed(0);\n            setListDisplayed({name: '', description: '', tasks: []})\n        }\n    }\n\n    const updateTask = async (task, index) => {\n        const obj = Object.assign({}, profile);\n        const id = obj.id;\n        delete obj.id;\n        obj.lists[indexDisplayed].tasks.splice(index, 1, task);\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'id': id\n            },\n            body: JSON.stringify(obj)\n        }\n        await fetch(`${process.env.REACT_APP_API_URL}/lists`, options);\n        obj.id = id;\n        setProfile(obj);\n    }\n\n    return (\n        <>\n        <ProfileNav addList={addList} addTask={addTask}/>\n        <div className='container-fluid' style={{padding: '0'}}>\n            <div className='row'>\n                <aside className='col-md-3'>\n                    <ul className=\"list-group list-group-flush sidebar\">\n                        {getListTitles()}\n                    </ul>\n                </aside>\n                <main className='col-md-9'>\n                    <h1 className=\"display-title\">{listDisplayed.name}\n                    {\n                        profile.lists.length > 0 ?\n                        <span style={{float: 'right', marginRight: \"20px\"}}>\n                        <ButtonGroup>\n                            <Button color=\"success\" onClick={() => removeList(true)}><i className=\"fa fa-check\"></i></Button>\n                            <Button color=\"danger\" onClick={() => removeList(false)}><i className=\"fa fa-remove\"></i></Button>\n                        </ButtonGroup>\n                        </span>\n                        : 'To begin, add your first list!'\n                    }\n                    </h1>\n                    <h3 style={{fontWeight: '200', fontStyle: 'italic'}}>{listDisplayed.description}</h3>\n                    <ul>\n                        {listTasks()}\n                    </ul>\n                </main>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport { getItem } from './config/local';\nimport Profile from './components/Profile';\n\nfunction App() {\n\n  const token = getItem('auth');\n\n  return (\n    <Router>\n      <Switch>\n        <Route \n          exact \n          path='/'\n          render={props => <Home {...props} token={token} />}\n          >\n          {/* <Home /> */}\n        </Route>\n        <Route\n          exact\n          path='/profile'\n          render={props => <Profile {...props} token={token} />}\n        >\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/logo.cddeebc3.png\";","const session = window.sessionStorage;\n\nconst setItem = (key, value) => {\n    session.setItem(key, value);\n}\n\nconst getItem = (key) => {\n    return session.getItem(key);\n}\n\nmodule.exports = {\n    setItem,\n    getItem\n}"],"sourceRoot":""}